plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
jar {
    enabled = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.liquibase:liquibase-core'

    implementation group: 'org.mapstruct', name: 'mapstruct', version: "$mapstructVersion"
    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: "${mapstructProcessorVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.4'
}

tasks.named('test') {
    useJUnitPlatform()
}

task buildDockerImage(type: Exec) {
    commandLine 'docker', 'build', '-t', 'your-image-name', '.'
}

task dockerComposeUp(type: Exec) {
    commandLine 'docker-compose', 'up', '-d'
}

task buildAndDeployMicroservices {
    dependsOn 'buildDockerImage', 'dockerComposeUp'
}
